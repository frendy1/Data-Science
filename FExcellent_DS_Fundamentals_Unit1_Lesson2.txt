
#######Frendy Excellent##################################
#Data Science Fundamentals###############################
#Unit 1 Lesson 2#########################################

######## Strings Drills##################################

# Hello world

def hello(name):
    return 'Hello, {}'.format(name)

# Quotable

def quotable(name, quote):
    return name + ' said: ' + '"' + quote + '"'

# Repeater

def repeater(string, n):
    return string * n

# Repeater, level 2

def repeater(string, n):
    return '"{}" repeated {} times is: "{}"'.format(string, n, string * n)

# Jedi name

def greet_jedi(first, last):
    # Your code goes here.
    jedi_master = last[0:3].capitalize() +first[0:2].capitalize()
    return 'Greetings, master {}'.format(jedi_master)

# Areacode extractor

def area_code(text):
    # Your code goes here
      my_area_code_beg_index = text.index("(") + 1
      my_area_code_end_index = text.index("(") + 4
      my_area_code = text[my_area_code_beg_index:my_area_code_end_index]
      return my_area_code

# Poem formatter

def format_poem(poem):
    # Your code goes here.
    my_poem_formatted = "Invalid input format"
    my_format_punc = ".\n"
    my_text_strip = poem.strip()
    my_sentences = my_text_strip.split(". ")
    my_sentences_len = len(my_sentences)
    if my_sentences_len > 0:
        for x in range(my_sentences_len - 1):
          my_sentences[x] = str(my_sentences[x]).strip()
          my_poem_formatted = my_format_punc.join(my_sentences)
    return my_poem_formatted


#Number Drills#####################################################
#RÃ¸mer temperature#################################################

def celsius_to_romer(temp):
    # Your code here.
    return (((temp * 21)/40) + 7.5)

#Pixelart planning#################################################

def is_divisible(wall_length, pixel_size):
    # Your code here.
    return wall_length % pixel_size == 0


#Blue and red marbles##############################################

def guess_blue(blue_start, red_start, blue_pulled, red_pulled):
    # Your code here.
    pull_blue_prob = (blue_start - blue_pulled)/((blue_start - blue_pulled) + (red_start - red_pulled))
    return pull_blue_prob

#Congo pizza######################################################

def box_capacity(length, width, height):
    # Your code here.
      box_side_len_in_ft = 16
      box_across = (length * 12)//16
      box_deep = (width * 12)//16
      box_high = (height * 12)//16
      boxes_total = box_across * box_deep * box_high
      return boxes_total

#Quadratic formula################################################

def quadratic_formula(a, b, c):
    
    root1 = -b/(2 * a) + (((b ** 2) - (4 * a * c)) ** (1/2))/(2 * a)
    
    root2 = -b/(2 * a) - (((b ** 2) - (4 * a * c)) ** (1/2))/(2 * a)
    
    return [root1, root2]